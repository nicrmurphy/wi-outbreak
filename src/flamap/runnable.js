export const runnable = 'function foo() {\r\n  var req = new XMLHttpRequest();\r\n  req.onreadystatechange = function() {\r\n    console.log(this.readyState, this.status);\r\n    if (this.readyState == 4 && this.status == 200) {\r\n      \/* parse HTML response *\/\r\n      let res = this.response;\r\n      let data = res.features;\r\n      console.log(data);\r\n      \/\/ document.getElementById(\"tester\").appendChild(dataTable);\r\n\r\n      \/* update and draw map *\/\r\n      simplemaps_statemap_mapdata.mapWidth = 1;\r\n      let maxCases = 0; \/\/ get max cases for color gradient calculation\r\n      let counties = {};\r\n      for (let i in data) {\r\n        const county = data[i];\r\n        const [name, cases] = [county.attributes.NAME, county.attributes.POSITIVE];\r\n        counties[name] = cases;\r\n        maxCases = Math.max(cases, maxCases);\r\n      }\r\n      console.log(counties);\r\n      console.log(\'max:\', maxCases);\r\n      \r\n      for (let [county, cases] of Object.entries(counties)) {\r\n        \/\/ console.log(county, cases)\r\n        for (let [id, map_data] of Object.entries(simplemaps_statemap_mapdata.state_specific)) {\r\n          \/\/ console.log(id, map_data)\r\n          if (county.includes(map_data.name)) {\r\n            \/\/ console.log(simplemaps_statemap_mapdata.map_data[id])\r\n            simplemaps_statemap_mapdata.state_specific[id].description = `${cases} ${parseInt(cases) === 1 ? \'case\' : \'cases\'}`;\r\n\r\n            \/\/ calculate color\r\n            const [max, min] = [255, 100];\r\n            let r = max - ((max - min) \/ maxCases * cases);\r\n            console.log(county, r);\r\n\r\n            simplemaps_statemap_mapdata.state_specific[id].color = `rgb(${r}, 0, 0)`;\r\n            simplemaps_statemap_mapdata.state_specific[id].hover_color = \'#FF9000\';\r\n            break;\r\n          }\r\n        }\r\n      };\r\n      simplemaps_statemap.refresh();\r\n      \/\/ var map = new FlaMap(simplemaps_statemap_mapdata);\r\n      \/\/ document.getElementById(\'map-container\').innerHTML = \'\';\r\n      \/\/ map.drawOnDomReady(\'map-container\');\r\n      \/\/ let loadingMsg = document.getElementById(\"loading-message\");\r\n      \/\/ loadingMsg.parentElement.removeChild(loadingMsg);\r\n    }\r\n  };\r\n  const url = \'https:\/\/services1.arcgis.com\/ISZ89Z51ft1G16OK\/arcgis\/rest\/services\/COVID19_WI\/FeatureServer\/0\/\/query?where=1%3D1&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&resultType=none&distance=0.0&units=esriSRUnit_Meter&returnGeodetic=false&outFields=NAME%2CPOSITIVE%2CDATE%2CCMNTY_SPRD&returnGeometry=true&featureEncoding=esriDefault&multipatchOption=xyFootprint&maxAllowableOffset=&geometryPrecision=&outSR=&datumTransformation=&applyVCSProjection=false&returnIdsOnly=false&returnUniqueIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&returnQueryGeometry=false&returnDistinctValues=false&cacheHint=false&orderByFields=NAME+ASC&groupByFieldsForStatistics=&outStatistics=&having=&resultOffset=&resultRecordCount=&returnZ=false&returnM=false&returnExceededLimitFeatures=true&quantizationParameters=&sqlFormat=none&f=pjson&token=\';\r\n  req.open(\"GET\", url, true);\r\n  req.responseType = \"json\";\r\n  req.send();\r\n}\r\nfoo();\r\n'